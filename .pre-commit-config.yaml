# * to update pre-commit hooks run: pre-commit autoupdate
# * https://github.com/pre-commit/pre-commit-hooks
# * https://pre-commit.com/hooks.html

# https://pre-commit.ci/
# ci:
#   autofix_commit_msg: [pre-commit.ci] auto fixes from pre-commit.com hooks
# for more information, see https://pre-commit.ci
#   autofix_prs: true
#   autoupdate_branch:
#   autoupdate_commit_msg: [pre-commit.ci] pre-commit autoupdate
#   autoupdate_schedule: weekly
#   submodules: false

repos:
  - repo: meta
    hooks:
      - id: check-useless-excludes
      # - id: check-hooks-apply
      # - id: identity # debugging
  - repo: local
    hooks:
      - id: pre-commit-autoupdate
        name: pre-commit autoupdate
        description: Update pre-commit hooks to the latest version.
        entry: pre-commit autoupdate
        pass_filenames: false
        language: system
        stages: [pre-push, manual]
        always_run: true
      # # pre-commit run cmake-build --hook-stage manual
      # - id: cmake-build
      #   name: Run CMake build
      #   entry: ./cmake_build.sh
      #   args: ["application/template/app_cmake", "arm_gcc"]
      #   language: script
      #   pass_filenames: false
      #   stages: [pre-push, manual]
      # pre-commit run cmake-build --hook-stage manual
      - id: ci_cd_manual
        name: Run CI/CD manual
        entry: ./ci_cd_manual.sh
        language: script
        pass_filenames: false
        stages: [pre-push, manual]
        verbose: true
        log_file: logs/ci_cd_manual.log
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # file
      - id: check-added-large-files
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: fix-byte-order-marker
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: mixed-line-ending
        args: [--fix=auto]

      # checker
      - id: check-json
      - id: check-xml
      - id: check-yaml
        args: [--allow-multiple-documents]

      # Python
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements
      # - id: double-quote-string-fixer
      - id: name-tests-test # default --pytest
      - id: requirements-txt-fixer

      # Git
      - id: check-merge-conflict
      - id: check-vcs-permalinks
      - id: forbid-new-submodules

  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: 'v17.0.6'
    hooks:
      - id: clang-format
  - repo: https://github.com/mxr/sync-pre-commit-deps
    rev: v0.0.1
    hooks:
      - id: sync-pre-commit-deps
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
  # - repo: https://github.com/adrienverge/yamllint.git
  #   rev: v1.33.0
  #   hooks:
  #     - id: yamllint
  #       args: [--format, parsable, --strict]
  # - repo: https://github.com/jumanjihouse/pre-commit-hook-yamlfmt
  #   rev: 0.2.3
  #   hooks:
  #     - id: yamlfmt
  # - repo: https://github.com/Lucas-C/pre-commit-hooks
  #   rev: v1.5.4
  #   hooks:
  # - id: forbid-crlf
  # - id: remove-crlf
  # - id: forbid-tabs
  # - id: remove-tabs
  # args: [--whitespaces-count, '2'] # defaults to: 4
  # - id: chmod
  #   args: ["644"]
  #   files: \.md$
  # - id: insert-license
  #   files: \.groovy$
  #   args:
  #     - --license-filepath
  #     - src/license_header.txt # defaults to: LICENSE.txt
  #     - --comment-style
  #     - // # defaults to:  #
  #     - --use-current-year
  #     - --no-extra-eol # see below
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.3
    hooks:
      - id: python-safety-dependencies-check
  # - repo: https://github.com/koalaman/shellcheck-precommit
  #   rev: v0.9.0
  #   hooks:
  #     - id: shellcheck
  #       args: ["--severity=warning"]  # Optionally only show errors and warnings
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
  - repo: https://github.com/jorisroovers/gitlint
    rev: v0.19.1
    hooks:
      - id: gitlint
    # Using this mirror lets us use mypyc-compiled black, which is about 2x faster
  - repo: https://github.com/psf/black-pre-commit-mirror
    rev: 24.1.0
    hooks:
      - id: black
        language_version: python3.11
  # - repo: https://github.com/pocc/pre-commit-hooks
  #   rev: v1.3.5
  #   hooks:
  # - id: clang-format
  #   args: [--style=Google]
  # - id: clang-tidy
  # - id: oclint
  # - id: uncrustify
  # - id: cppcheck
  # - id: cpplint
  # - id: include-what-you-use
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        require_serial: false
        files: .*\.(py|txt|cmake|md|rst|sh|ps1|hpp|tpp|cpp|cc)$
        args: [-S, '.git,third_party'] # , -I, .codespell.allow

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint-fix
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
      # - id: commitizen-branch
      #   stages:
      #     - post-commit
      #     - push
  # - repo: https://github.com/cheshirekow/cmake-format-precommit
  #   rev: v0.6.13
  #   hooks:
  #     - id: cmake-format
  #     - id: cmake-lint
  - repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.7.0-4
    hooks:
      - id: shfmt
  # CMake formatter
  # - repo: https://github.com/BlankSpruce/gersemi
  #   rev: 0.11.0
  #   hooks:
  #     - id: gersemi
  # - repo: https://github.com/mrtazz/checkmake.git
  #   rev: 0.2.2
  #   hooks:
  #     - id: checkmake
